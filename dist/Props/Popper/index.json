{"description":"","displayName":"Popper","methods":[],"props":{"disablePortal":{"defaultValue":null,"description":"The `children` will be inside the DOM hierarchy of the parent component.","name":"disablePortal","required":false,"type":{"name":"enum","raw":"boolean","value":[{"value":"false"},{"value":"true"}]}},"keepMounted":{"defaultValue":null,"description":"Always keep the children in the DOM.\nThis prop can be useful in SEO situation or\nwhen you want to maximize the responsiveness of the Popper.","name":"keepMounted","required":false,"type":{"name":"enum","raw":"boolean","value":[{"value":"false"},{"value":"true"}]}},"modifiers":{"defaultValue":null,"description":"Popper.js is based on a \"plugin-like\" architecture,\nmost of its features are fully encapsulated \"modifiers\".\n\nA modifier is a function that is called each time Popper.js needs to\ncompute the position of the popper.\nFor this reason, modifiers should be very performant to avoid bottlenecks.\nTo learn how to create a modifier, [read the modifiers documentation](https://popper.js.org/docs/v1/#modifiers).","name":"modifiers","required":false,"type":{"name":"object"}},"open":{"defaultValue":null,"description":"If `true`, the popper is visible.","name":"open","required":false,"type":{"name":"enum","raw":"boolean","value":[{"value":"false"},{"value":"true"}]}},"placement":{"defaultValue":{"value":"top"},"description":"Popper placement.","name":"placement","required":false,"type":{"name":"enum","raw":"\"bottom-end\" | \"bottom-start\" | \"bottom\" | \"left-end\" | \"left-start\" | \"left\" | \"right-end\" | \"right-start\" | \"right\" | \"top-end\" | \"top-start\" | \"top\" | \"auto\" | \"auto-start\" | \"auto-end\"","value":[{"value":"\"bottom-end\""},{"value":"\"bottom-start\""},{"value":"\"bottom\""},{"value":"\"left-end\""},{"value":"\"left-start\""},{"value":"\"left\""},{"value":"\"right-end\""},{"value":"\"right-start\""},{"value":"\"right\""},{"value":"\"top-end\""},{"value":"\"top-start\""},{"value":"\"top\""},{"value":"\"auto\""},{"value":"\"auto-start\""},{"value":"\"auto-end\""}]}},"popperOptions":{"defaultValue":null,"description":"Options provided to the [`popper.js`](https://popper.js.org/docs/v1/) instance.","name":"popperOptions","required":false,"type":{"name":"object"}},"popperRef":{"defaultValue":null,"description":"A ref that points to the used popper instance.","name":"popperRef","required":false,"type":{"name":"enum","raw":"Ref<any>","value":[{"value":"(instance: any) => void"},{"value":"RefObject<any>"}]}},"style":{"defaultValue":null,"description":"@ignore","name":"style","required":false,"type":{"name":"object"}},"transition":{"defaultValue":null,"description":"Help supporting a react-transition-group/Transition component.","name":"transition","required":false,"type":{"name":"enum","raw":"boolean","value":[{"value":"false"},{"value":"true"}]}},"paperProps":{"defaultValue":{"value":"{}"},"description":"Help supporting a Box component.","name":"paperProps","required":false,"type":{"name":"any"}},"content":{"defaultValue":null,"description":"Content Node/String","name":"content","required":false,"type":{"name":"enum","raw":"ReactNode","value":[{"value":"string"},{"value":"number"},{"value":"false"},{"value":"true"},{"value":"{}"},{"value":"ReactElement<any, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)>) | (new (props: any) => Component<any, any, any>)>"},{"value":"ReactNodeArray"},{"value":"ReactPortal"}]}},"onClickAway":{"defaultValue":null,"description":"OnClick Away","name":"onClickAway","required":false,"type":{"name":"(event: MouseEvent | TouchEvent) => void"}}},"filename":"index"}
