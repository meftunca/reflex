{"version":3,"sources":["webpack:///../Pages/Documentation/DataDisplay/Text/index.tsx","webpack:///../Pages/Documentation/DataDisplay/Text/Text.mdx"],"names":["TextSample","typographyTest","typoghyTypes","map","k","variant","tag","key","color","colors","length","gutter","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","__position","__code","__scope","Playground","Props","List","Button","Text","of","isMDXComponent"],"mappings":"4RAEMA,EAAa,WACjB,OACE,uBACE,YAAC,IAAD,mBACA,uBAECC,MAKDA,EAAiB,kBACrBC,EAAaC,KAAI,WAAwBC,GAAxB,IAAEC,EAAF,KAAWC,EAAX,YACf,YAAC,IAAD,CACEC,IAAKF,EACLA,QAASA,EACTC,IAAKA,EACLE,MAAOC,EAAOL,EAAIK,EAAOC,QACzBC,OAAQ,GALV,aAOaN,EAPb,YAO+BC,OAG7BJ,EAAe,CACnB,CAAC,KAAM,MACP,CAAC,KAAM,MACP,CAAC,KAAM,MACP,CAAC,KAAM,MACP,CAAC,KAAM,MACP,CAAC,KAAM,MACP,CAAC,YAAa,MACd,CAAC,YAAa,MACd,CAAC,QAAS,KACV,CAAC,QAAS,KACV,CAAC,SAAU,QACX,CAAC,UAAW,WACZ,CAAC,WAAY,SAETO,EAAS,CAAC,UAAW,YAAa,QAAS,UAAW,OAAQ,WAErDT,S,8NCjCR,IAAMY,EAAe,Q,+NAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,QADR,QAGA,iBAAQ,CACN,GAAM,eADR,eAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,iBAAkBC,SAAO,GAC1DJ,QACAH,kBACAQ,eACAC,UACAC,SACAC,WACAC,SACA3B,cAR0D,gBAS1De,IAT0D,EAU1DH,eAV0D,GAWzDO,QAAQ,cACb,YAACQ,EAAD,CAAYR,QAAQ,gBAElB,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAOS,GAAID,IAAMR,QAAQ,gB,6NAK7BH,EAAWa,gBAAiB","file":"component---pages-documentation-data-display-text-text-mdx-a04abb2223737be8209f.js","sourcesContent":["import React from \"react\";\nimport { Text } from \"@re-flex/ui/src\";\nconst TextSample = () => {\n  return (\n    <div>\n      <Text>Typography</Text>\n      <br />\n\n      {typographyTest()}\n    </div>\n  );\n};\n\nconst typographyTest = () =>\n  typoghyTypes.map(([variant, tag]: any[], k) => (\n    <Text\n      key={variant}\n      variant={variant}\n      tag={tag}\n      color={colors[k % colors.length]}\n      gutter={8}\n    >\n      Variant = {variant} / Tag = {tag}\n    </Text>\n  ));\nconst typoghyTypes = [\n  [\"h1\", \"h1\"],\n  [\"h2\", \"h2\"],\n  [\"h3\", \"h3\"],\n  [\"h4\", \"h4\"],\n  [\"h5\", \"h5\"],\n  [\"h6\", \"h6\"],\n  [\"subtitle1\", \"h4\"],\n  [\"subtitle2\", \"h4\"],\n  [\"body1\", \"p\"],\n  [\"body2\", \"p\"],\n  [\"button\", \"span\"],\n  [\"caption\", \"caption\"],\n  [\"overline\", \"span\"],\n];\nconst colors = [\"primary\", \"secondary\", \"error\", \"warning\", \"info\", \"success\"];\n\nexport default TextSample;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/devloops/Desktop/maple/maple-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from \"docz\";\nimport { List, Button, Text } from \"@re-flex/ui/src\";\nimport TextSample from \"./index.tsx\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"list\"\n    }}>{`List`}</h1>\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={0} __code={'<TextSample />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      List,\n      Button,\n      Text,\n      TextSample,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <TextSample mdxType=\"TextSample\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={Text} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}