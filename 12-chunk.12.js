(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{1827:function(t,e,n){"use strict";n.r(e),n.d(e,"default",(function(){return O}));var a=n(2),o=n.n(a),r=n(25),i=n(3);const c={blue:"#0d6efd",indigo:"#6610f2",purple:"#6f42c1",pink:"#d63384",red:"#dc3545",orange:"#fd7e14",yellow:"#ffc107",green:"#28a745",teal:"#20c997",cyan:"#17a2b8",gray:"#6c757d","gray-dark":"#343a40",primary:"#0d6efd",secondary:"#6c757d",success:"#28a745",info:"#17a2b8",warning:"#ffc107",danger:"#dc3545",dark:"#343a40"},u=({variant:t="text"})=>o.a.createElement(o.a.Fragment,null,Object.entries(c).map((([e,n],a)=>o.a.createElement(i.Button,{variant:t,color:n,key:a,css:{margin:".5rem .25rem"}},e)))),s=t=>Object.entries(c).map((([e,n],a)=>`<Button variant="${t}" color={${n}}>\n        ${e}\n      </Button>`));try{u.displayName="GenerateButton",u.__docgenInfo={description:"",displayName:"GenerateButton",props:{variant:{defaultValue:{value:"text"},description:"",name:"variant",required:!1,type:{name:'"text" | "outlined" | "contained"'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Pages/Documentation/Inputs/Button/Variants.tsx#GenerateButton"]={docgenInfo:u.__docgenInfo,name:"GenerateButton",path:"src/Pages/Documentation/Inputs/Button/Variants.tsx#GenerateButton"})}catch(t){}try{s.displayName="GenerateButtonCodes",s.__docgenInfo={description:"",displayName:"GenerateButtonCodes",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Pages/Documentation/Inputs/Button/Variants.tsx#GenerateButtonCodes"]={docgenInfo:s.__docgenInfo,name:"GenerateButtonCodes",path:"src/Pages/Documentation/Inputs/Button/Variants.tsx#GenerateButtonCodes"})}catch(t){}n(4);function l(){return(l=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(t[a]=n[a])}return t}).apply(this,arguments)}function p(t,e){if(null==t)return{};var n,a,o=function(t,e){if(null==t)return{};var n,a,o={},r=Object.keys(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}var b,d=(b="Props",function(t){return console.warn("Component "+b+" was not imported, exported, or provided by MDXProvider as global scope"),Object(r.b)("div",t)}),m={};function O(t){var e=t.components,n=p(t,["components"]);return Object(r.b)("wrapper",l({},m,n,{components:e,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"with-icon"},"With Icon"),Object(r.b)("h3",{id:"example-usage"},"Example Usage"),Object(r.b)("pre",null,Object(r.b)("code",l({parentName:"pre"},{className:"language-js",metastring:"live=true",live:"true"}),'<>\n  <Button\n    variant="outlined"\n    affixIcon={<BsCheckCircle />}\n    color="success"\n    size={14}\n  >\n    Icon Check Circle (affix)\n  </Button>\n\n  <Button\n    variant="outlined"\n    suffixIcon={<FiAlertOctagon />}\n    color="error"\n    size={14}\n  >\n    Icon Alert (suffix)\n  </Button>\n</>\n')),Object(r.b)("h1",{id:"sizes"},"Sizes"),Object(r.b)("h3",{id:"example-usage-1"},"Example Usage"),Object(r.b)("pre",null,Object(r.b)("code",l({parentName:"pre"},{className:"language-js",metastring:"live=true",live:"true"}),'<>\n  <Button variant="contained" color="primary" size={10}>\n    Primary 10px\n  </Button>\n\n  <Button variant="contained" color="primary" size={12}>\n    Primary 12px\n  </Button>\n\n  <Button variant="contained" color="primary" size={14}>\n    Primary 14px\n  </Button>\n</>\n')),Object(r.b)("h1",{id:"variants"},"Variants"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},'default value = "text"')),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},'Options => "text" | "contained" | "outlined"')),Object(r.b)("h2",{id:"contained-buttons"},"Contained Buttons"),Object(r.b)("br",null),Object(r.b)("h3",{id:"example-contained-buttons"},"Example Contained Buttons"),Object(r.b)(i.Box,{m:[16,0],p:32,bgColor:"paper",radius:6,mdxType:"Box"},Object(r.b)(u,{variant:"contained",mdxType:"GenerateButton"})),Object(r.b)("h3",{id:"example-usage-2"},"Example Usage"),Object(r.b)("pre",null,Object(r.b)("code",l({parentName:"pre"},{className:"language-js",metastring:"live=true",live:"true"}),'<>\n  <Button variant="contained" color="primary">\n    Primary\n  </Button>\n\n  <Button variant="contained" color="#dc3545">\n    Custom Color\n  </Button>\n</>\n')),Object(r.b)("h2",{id:"outlined-buttons"},"Outlined Buttons"),Object(r.b)("br",null),Object(r.b)("h3",{id:"example-outlined-buttons"},"Example Outlined Buttons"),Object(r.b)(i.Box,{m:[16,0],p:32,bgColor:"paper",radius:6,mdxType:"Box"},Object(r.b)(u,{variant:"outlined",mdxType:"GenerateButton"})),Object(r.b)("h3",{id:"example-usage-3"},"Example Usage"),Object(r.b)("pre",null,Object(r.b)("code",l({parentName:"pre"},{className:"language-js",metastring:"live=true",live:"true"}),'<>\n  <Button variant="outlined" color="primary">\n    Primary\n  </Button>\n\n  <Button variant="outlined" color="#dc3545">\n    Custom Color\n  </Button>\n</>\n')),Object(r.b)("h2",{id:"text-buttons"},"Text Buttons"),Object(r.b)("br",null),Object(r.b)("h3",{id:"example-text-buttons"},"Example Text Buttons"),Object(r.b)(i.Box,{m:[16,0],p:32,bgColor:"paper",radius:6,mdxType:"Box"},Object(r.b)(u,{variant:"text",mdxType:"GenerateButton"})),Object(r.b)("h3",{id:"example-usage-4"},"Example Usage"),Object(r.b)("pre",null,Object(r.b)("code",l({parentName:"pre"},{className:"language-js",metastring:"live=true",live:"true"}),'<>\n  <Button variant="text" color="primary">\n    Primary\n  </Button>\n\n  <Button variant="text" color="#dc3545">\n    Custom Color\n  </Button>\n\n  <Button color="primary">(OR WithOut Variant)</Button>\n</>\n')),Object(r.b)("h2",{id:"props"},"Props"),Object(r.b)(d,{of:i.Button,mdxType:"Props"}))}O.isMDXComponent=!0}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,