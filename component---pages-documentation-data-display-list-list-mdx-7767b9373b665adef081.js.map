{"version":3,"sources":["webpack:///../Pages/Documentation/DataDisplay/List/List.tsx","webpack:///../Pages/Documentation/DataDisplay/List/List.mdx"],"names":["Users","Array","fill","map","i","k","leftItem","radius","p","overflow","width","height","src","image","avatar","title","fake","description","key","SimpleList","display","m","shadow","Item","button","rightItem","variant","size","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","__position","__code","__scope","Playground","Props","List","Button","ListSample","of","isMDXComponent"],"mappings":"uSAyBMA,EAAQC,MAAM,GACjBC,KAAK,IACLC,KAAI,SAACC,EAAGC,GAAJ,MAAW,CACdC,SACE,YAAC,IAAD,CAAKC,OAAQ,GAAIC,EAAG,EAAGC,SAAU,SAAUC,MAAO,GAAIC,OAAQ,IAC5D,mBAAKC,IAAKC,QAAMC,YAGpBC,MAAOC,eAAK,wCACZC,YAAaD,eAAK,mBAClBE,IAAKb,MAGHc,EAA8B,WAClC,OACE,YAAC,IAAD,CAAKC,QAAQ,QACX,YAAC,IAAD,CAAKC,EAAG,CAAC,GAAI,IAAKC,OAAQ,EAAGf,OAAQ,IACnC,YAAC,IAAD,KACGP,EAAMG,KAAI,SAACC,GAAD,OACT,YAAC,IAAKmB,KAAN,aAAWC,QAAM,GAAKpB,SAI5B,YAAC,IAAD,CAAKiB,EAAG,CAAC,GAAI,IAAKC,OAAQ,EAAGf,OAAQ,IACnC,YAAC,IAAD,KACGP,EAAMG,KAAI,SAACC,GAAD,OACT,YAAC,IAAKmB,KAAN,aACEC,QAAM,GACFpB,EAFN,CAGEqB,UACE,YAAC,IAAD,CAAQC,QAAQ,WAAWC,KAAM,IAAjC,iBAYDR,S,6NC1DR,IAAMS,EAAe,Q,+NAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,QADR,QAGA,iBAAQ,CACN,GAAM,eADR,eAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,iBAAkBC,SAAO,GAC1DJ,QACAH,kBACAQ,eACAC,UACAC,SACAC,WACAC,cAP0D,gBAQ1DZ,IAR0D,EAS1DH,eAT0D,GAUzDO,QAAQ,cACb,YAACM,EAAD,CAAYN,QAAQ,gBAElB,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAOS,GAAID,EAAYR,QAAQ,gB,6NAcnCH,EAAWa,gBAAiB","file":"component---pages-documentation-data-display-list-list-mdx-7767b9373b665adef081.js","sourcesContent":["import React from \"react\";\nimport { List, Text, IconButton, Box, Button } from \"@re-flex/ui/src\";\nimport { fake, image } from \"faker\";\ninterface Props {\n  /** OnLongPress */\n  onLongPress?: () => void;\n  longPressDelay?: number;\n  title: string | React.ReactNode;\n  description?: string | React.ReactNode;\n  colorDepth?: \"light\" | \"main\" | \"dark\";\n  leftItem?: React.ReactNode;\n  rightItem?: React.ReactNode;\n  fullWidth?: boolean;\n  size?: number;\n  button?: boolean;\n  color?:\n    | \"primary\"\n    | \"secondary\"\n    | \"error\"\n    | \"warning\"\n    | \"info\"\n    | \"success\"\n    | string;\n  className?: string | string[];\n}\nconst Users = Array(5)\n  .fill(\"\")\n  .map((i, k) => ({\n    leftItem: (\n      <Box radius={30} p={0} overflow={\"hidden\"} width={30} height={30}>\n        <img src={image.avatar()} />\n      </Box>\n    ),\n    title: fake(`{{name.lastName}} {{name.firstName}}`),\n    description: fake(`{{name.suffix}}`),\n    key: k,\n  }));\n\nconst SimpleList: React.FC<Props> = () => {\n  return (\n    <Box display=\"flex\">\n      <Box m={[12, 24]} shadow={1} radius={12}>\n        <List>\n          {Users.map((i: any) => (\n            <List.Item button {...i} />\n          ))}\n        </List>\n      </Box>\n      <Box m={[12, 24]} shadow={1} radius={12}>\n        <List>\n          {Users.map((i: any) => (\n            <List.Item\n              button\n              {...i}\n              rightItem={\n                <Button variant=\"outlined\" size={12}>\n                  Add\n                </Button>\n              }\n            />\n          ))}\n        </List>\n      </Box>\n    </Box>\n  );\n};\n\nexport default SimpleList;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/devloops/Desktop/maple/maple-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from \"docz\";\nimport { List, Button } from \"@re-flex/ui/src\";\nimport ListSample from \"./List.tsx\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"list\"\n    }}>{`List`}</h1>\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={0} __code={'<ListSample />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      List,\n      Button,\n      ListSample,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <ListSample mdxType=\"ListSample\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={ListSample} mdxType=\"Props\" />\n    {\n      /* ## Using different kinds\n      <Playground>\n       <Alert kind=\"info\">Some message</Alert>\n       <Alert kind=\"positive\">Some message</Alert>\n       <Alert kind=\"negative\">Some message</Alert>\n       <Alert kind=\"warning\">Some message</Alert>\n      </Playground> */\n    }\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}