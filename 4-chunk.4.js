(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{1820:function(e,r,t){"use strict";t.r(r),t.d(r,"default",(function(){return x}));t(2);var a=t(25),n=t(62),o=t(3);t(4);function c(){return(c=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e}).apply(this,arguments)}function i(e,r){if(null==e)return{};var t,a,n=function(e,r){if(null==e)return{};var t,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var b={};function l(e){var r=e.components,t=i(e,["components"]);return Object(a.b)("wrapper",c({},b,t,{components:r,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"size"},"Size"),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{className:"language-js",metastring:"live=true",live:"true"}),'<Box>\n  <Avatar label="Muhammed Burak Şentürk" size={20} />\n  <Avatar label="Muhammed Burak Şentürk" size={30} />\n  <Avatar label="Muhammed Burak Şentürk" size={40} />\n  <Avatar label="Muhammed Burak Şentürk" size={50} />\n</Box>\n')))}function u(){return(u=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e}).apply(this,arguments)}function p(e,r){if(null==e)return{};var t,a,n=function(e,r){if(null==e)return{};var t,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}l.isMDXComponent=!0;var s={};function m(e){var r=e.components,t=p(e,["components"]);return Object(a.b)("wrapper",u({},s,t,{components:r,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"images"},"Images"),Object(a.b)("pre",null,Object(a.b)("code",u({parentName:"pre"},{className:"language-js",metastring:"live=true",live:"true"}),"<Box>\n  <Avatar src={image.avatar()} size={20} />\n  <Avatar src={image.avatar()} size={30} />\n  <Avatar src={image.avatar()} size={40} />\n  <Avatar src={image.avatar()} size={50} />\n</Box>\n")))}function v(){return(v=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e}).apply(this,arguments)}function O(e,r){if(null==e)return{};var t,a,n=function(e,r){if(null==e)return{};var t,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}m.isMDXComponent=!0;var j={};function y(e){var r=e.components,t=O(e,["components"]);return Object(a.b)("wrapper",v({},j,t,{components:r,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"icons"},"Icons"),Object(a.b)("pre",null,Object(a.b)("code",v({parentName:"pre"},{className:"language-js",metastring:"live=true",live:"true"}),"<Box>\n  <Avatar icon={<FiCamera />} size={24} />\n  <Avatar icon={<FiAlertTriangle />} size={30} />\n  <Avatar icon={<FiAward />} size={40} />\n  <Avatar icon={<FiArrowDownCircle />} size={50} />\n  <Avatar icon={<FiBell />} size={50} />\n</Box>\n")))}y.isMDXComponent=!0;var f=t(15);function d(){return(d=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e}).apply(this,arguments)}function g(e,r){if(null==e)return{};var t,a,n=function(e,r){if(null==e)return{};var t,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var A=t(77),h={};function x(e){var r=e.components,t=g(e,["components"]);return Object(a.b)("wrapper",d({},h,t,{components:r,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"introduction"},"Introduction"),Object(a.b)("h2",{id:"samples--radius--colors"},"Samples && Radius && Colors"),Object(a.b)(o.Avatar,{label:"Muhammed Burak Şentürk",color:"#eeeeee",textColor:"black",mdxType:"Avatar"}),Object(a.b)(o.Avatar,{src:A.avatar(),mdxType:"Avatar"}),Object(a.b)(o.Avatar,{icon:Object(a.b)(f.FiCamera,{mdxType:"FiCamera"}),color:"blue",mdxType:"Avatar"}),Object(a.b)("hr",null),Object(a.b)(o.Avatar,{label:"Muhammed Burak Şentürk",radius:4,color:"purple",mdxType:"Avatar"}),Object(a.b)(o.Avatar,{src:A.avatar(),radius:4,mdxType:"Avatar"}),Object(a.b)(o.Avatar,{icon:Object(a.b)(f.FiCamera,{mdxType:"FiCamera"}),radius:4,color:"green",mdxType:"Avatar"}),Object(a.b)("hr",null),Object(a.b)(o.Avatar,{label:"Muhammed Burak Şentürk",radius:8,mdxType:"Avatar"}),Object(a.b)(o.Avatar,{src:A.avatar(),radius:8,mdxType:"Avatar"}),Object(a.b)(o.Avatar,{icon:Object(a.b)(f.FiCamera,{mdxType:"FiCamera"}),radius:8,color:"black",mdxType:"Avatar"}),Object(a.b)("blockquote",null),Object(a.b)(l,{mdxType:"Size"}),Object(a.b)("blockquote",null),Object(a.b)(m,{mdxType:"AvatarImage"}),Object(a.b)("blockquote",null),Object(a.b)(y,{mdxType:"AvatarIcon"}),Object(a.b)("h2",{id:"properties"},"Properties"),Object(a.b)(n.a.Props,{props:o.Avatar.__docgenInfo}))}x.isMDXComponent=!0}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,